C51 COMPILER V8.02   OCMJ                                                                  08/27/2008 15:24:54 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE OCMJ
OBJECT MODULE PLACED IN ocmj.OBJ
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE ocmj.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //=====================================================================
   2          //                    OCMJ4X8C 液晶驱动程序(串行)
   3          //硬件连接: cs   ――  P2^6;      
   4          //          std  ――  P3^1;    
   5          //          sclk ――  P3^0;     
   6          //          psb  ――  VSS;   
   7          //          rst  ――  VDD; 
   8          //          VDD  ――  逻辑电源(+5V)
   9          //          VSS  ――  GND(0V)  
  10          //ocm4x8c(串).c
  11          //writer:谷雨 2008年3月12日于EDA实验室整理
  12          //=====================================================================
  13          #include <STC89C51RC.h>      //STC单片机头文件
  14          
  15          #define uint  unsigned int
  16          #define uchar unsigned char
  17          
  18          static void wr_lcd (uchar dat_comm,uchar content);
  19          static void delay (uint us);
  20          
  21          #define comm  0
  22          #define dat   1
  23          #define x1    0x80
  24          #define x2    0x88
  25          #define y     0x80
  26          
  27          //**************************修改硬件时要修改的部分********************************
  28          
  29          sbit cs   = P0^0;         //串行口使能，高电平有效（作RS时，1为数据，0为指令）
  30          sbit std  = P0^1;     //串口数据（作R/W时，1为读，0为写）
  31          sbit sclk = P0^2;     //串口时钟，高电平有效
  32          
  33          //================================================================= 
  34          // 函数名称 ：void init_lcd (void)
  35          // 函数功能 ：实现lcd初始化  
  36          // 入口参数 ：无
  37          // 出口参数 ：无
  38          //================================================================= 
  39          void init_lcd (void)
  40          {
  41   1              delay(100);
  42   1              wr_lcd (comm,0x30);  //30---基本指令动作
  43   1              wr_lcd (comm,0x01);  //清屏，地址指针指向00H
  44   1              delay (100);         //清屏需较长时间
  45   1              wr_lcd (comm,0x06);  //光标的移动方向
  46   1          wr_lcd (comm,0x0c);  //显示打开，光标关，反白关
  47   1      }
  48          
  49          //=================================================================
  50          //函数名:void set_position(unsigned int a,unsigned int b) 
  51          //函数功能: 设定显示坐标
  52          //入口参数:xx  yy    
  53          //          xx:0~3   yy:0~7
  54          //出口参数：无
  55          //=================================================================   
C51 COMPILER V8.02   OCMJ                                                                  08/27/2008 15:24:54 PAGE 2   

  56          void set_position(unsigned int xx,unsigned int yy)      //坐标    
  57          { 
  58   1         unsigned int line;
  59   1         wr_lcd (comm,0x30);  //30---基本指令动作
  60   1         switch(xx)
  61   1         {
  62   2           case 0:line=0x00;break;    
  63   2           case 1:line=0x10;break;
  64   2           case 2:line=0x08;break;
  65   2           case 3:line=0x18;break;
  66   2           default:break;
  67   2          }
  68   1         wr_lcd(comm,0x80+line+yy);             //设定地址
  69   1      } 
  70          
  71          //================================================================= 
  72          //函数名:void send_str(unsigned char *cc) 
  73          //函数功能: 显示汉字或是字符
  74          //入口参数:*cc 
  75          //出口参数：无   
  76          //注意:注意为全角字符,即每个字符占十六个字节
  77          //     显示汉字或者字符时先设定显示坐标，最多显示8个汉字           
  78          //=================================================================         
  79          void send_str(uchar code *cc)  
  80          {
  81   1         unsigned int i;
  82   1         wr_lcd (comm,0x30); 
  83   1         for(i=0;(i<16)&&*(cc+i);i++)
  84   1         {
  85   2                      wr_lcd(dat,*(cc+i));
  86   2         }     
  87   1      }
  88          
  89          //================================================================= 
  90          //函数名:void send_chin(uchar code *cc) 
  91          //函数功能: 显示单个汉字
  92          //入口参数:*cc 
  93          //出口参数：无            
  94          //=================================================================         
  95          void send_chin(uchar code *cc)  
  96          {
  97   1         unsigned int i;
  98   1         wr_lcd (comm,0x30); 
  99   1         for(i=0;(i<2)&&*(cc+i);i++)
 100   1         {
 101   2                      wr_lcd(dat,*(cc+i));
 102   2         }     
 103   1      }
 104          
 105          //================================================================= 
 106          //函数名:void send_char(uchar cc) 
 107          //函数功能: 显示一个字符
 108          //入口参数: cc 
 109          //出口参数：无          
 110          //=================================================================         
 111          void send_char(uchar cc)  
 112          {
 113   1         wr_lcd (comm,0x30); 
 114   1         wr_lcd(dat,cc);     
 115   1      }
 116          
 117          //=================================================================
C51 COMPILER V8.02   OCMJ                                                                  08/27/2008 15:24:54 PAGE 3   

 118          //函数名:void send_img(unsigned code *img)
 119          //函数功能: 显示图形
 120          //入口参数:uchar code *img     
 121          //出口参数：无
 122          //注意：显示图形时先写第一行数据，依次向后  
 123          //=================================================================  
 124          void send_img (uchar code *img)
 125          {
 126   1        uchar i,j;
 127   1        for(j=0;j<32;j++)                        //上半屏写入图形数据
 128   1        {
 129   2          for(i=0;i<8;i++)
 130   2          {
 131   3            wr_lcd (comm,0x34);       //8位控制端口，选择扩充指令集
 132   3            wr_lcd (comm,y+j);        //选择图形区Y轴坐标
 133   3            wr_lcd (comm,x1+i);        //选择图形区X轴坐标
 134   3            wr_lcd (comm,0x30);        //选择基本指令集
 135   3            wr_lcd (dat,img[j*16+i*2]);       //写图形数据
 136   3            wr_lcd (dat,img[j*16+i*2+1]);
 137   3          }
 138   2        }
 139   1        for(j=32;j<64;j++)                    //下半屏写入图形数据
 140   1        {
 141   2          for(i=0;i<8;i++)
 142   2          {
 143   3            wr_lcd (comm,0x34);
 144   3            wr_lcd (comm,y+j-32);
 145   3            wr_lcd (comm,x2+i);
 146   3            wr_lcd (comm,0x30);
 147   3            wr_lcd (dat,img[j*16+i*2]);
 148   3            wr_lcd (dat,img[j*16+i*2+1]);
 149   3          }
 150   2        }
 151   1        wr_lcd (comm,0x36);           //写入数据后选择图形显示
 152   1      }
 153          
 154          //=================================================================
 155          //函数名:void lat_disp (uchar data1,uchar data2)
 156          //函数功能:显示点阵
 157          //入口参数:uchar data1 奇数行显示的点阵
 158          //         uchar data2 偶数行显示的点阵 
 159          //出口参数：无
 160          //================================================================= 
 161          void lat_disp (uchar data1,uchar data2)
 162          {
 163   1        uchar i,j,k,x;
 164   1        x=x1;
 165   1        for(k=0;k<2;k++)
 166   1        {
 167   2          for(j=0;j<16;j++)
 168   2          {
 169   3            for(i=0;i<8;i++)
 170   3            {
 171   4              wr_lcd (comm,0x34);               //8位控制端口，选择扩充指令集
 172   4              wr_lcd (comm,y+j*2);      //Y轴
 173   4              wr_lcd (comm,x+i);                //X轴
 174   4              wr_lcd (comm,0x30);               //选择基本指令集
 175   4              wr_lcd (dat,data1);               //写入数据
 176   4              wr_lcd (dat,data1);
 177   4            }
 178   3            for(i=0;i<8;i++)
 179   3            {
C51 COMPILER V8.02   OCMJ                                                                  08/27/2008 15:24:54 PAGE 4   

 180   4              wr_lcd (comm,0x34);
 181   4              wr_lcd (comm,y+j*2+1);
 182   4              wr_lcd (comm,x+i);
 183   4              wr_lcd (comm,0x30);
 184   4              wr_lcd (dat,data2);
 185   4              wr_lcd (dat,data2);
 186   4            }
 187   3          }
 188   2          x=x2;
 189   2        }
 190   1        wr_lcd (comm,0x36);           //写入数据后选择显示
 191   1      }
 192          
 193          //=================================================================
 194          //函数名:void clear() 
 195          //函数功能:清屏 
 196          //入口参数:无
 197          //出口参数：无 
 198          //================================================================= 
 199          void clear (void)
 200          {
 201   1        wr_lcd (comm,0x30);     //选择基本指令集
 202   1        wr_lcd (comm,0x01);     //清屏
 203   1        delay (180);                    //延时
 204   1      }
 205          
 206          //=================================================================
 207          //函数名:void clear_line(uint line) 
 208          //函数功能:清除一行 
 209          //入口参数: line 0~3
 210          //出口参数：无
 211          //================================================================= 
 212          void clear_line(uint line)  //清除一行（0~3行） 
 213          {
 214   1              uint i;
 215   1              set_position(line,0);
 216   1              for(i=0;i<16;i++)
 217   1          wr_lcd (dat,0x20);//填充空格  
 218   1      }
 219          
 220          //================================================================= 
 221          // 函数名称 ：void delay (uint us)
 222          // 函数功能 ：延时
 223          // 入口参数 ：us  延时时间的长短
 224          // 出口参数 ：无
 225          //================================================================= 
 226          void delay (uint us)   
 227          {
 228   1        while(us--);
 229   1      }
 230          
 231          //================================================================= 
 232          // 函数名称 ：void wr_lcd (uchar dat_comm,uchar content)
 233          // 函数功能 ：向lcd中写数据或者指令  
 234          // 入口参数 ：dat_comm 选择是写数据或者写指令位
 235          //            content    dat_comm为1时写数据，否则写指令
 236          // 出口参数 ：无
 237          //================================================================= 
 238          void wr_lcd (uchar dat_comm,uchar content)
 239          {
 240   1              uchar a,i,j;
 241   1          delay (50);    //延时，等待内部动作完成
C51 COMPILER V8.02   OCMJ                                                                  08/27/2008 15:24:54 PAGE 5   

 242   1          a=content;
 243   1              cs=1;
 244   1              sclk=0;
 245   1              std=1;
 246   1              for(i=0;i<5;i++)                 //写入5个1，作为启动位
 247   1              {
 248   2              sclk=1;
 249   2              sclk=0;
 250   2              }
 251   1              std=0;
 252   1              sclk=1;
 253   1              sclk=0;
 254   1              if(dat_comm)                     //判断写数据还是指令
 255   1              std=1;   //data
 256   1              else
 257   1              std=0;   //command
 258   1              sclk=1;
 259   1              sclk=0;
 260   1              std=0;                                  //写入1个0
 261   1              sclk=1;
 262   1              sclk=0;
 263   1              for(j=0;j<2;j++)                 
 264   1              {
 265   2              for(i=0;i<4;i++)        //分别写入高四位和低四位
 266   2              {
 267   3                      a=a<<1;
 268   3                      std=CY;
 269   3                      sclk=1;
 270   3                      sclk=0;
 271   3              }
 272   2              std=0;                             //写入4个0
 273   2              for(i=0;i<4;i++)
 274   2              {
 275   3                      sclk=1;
 276   3                      sclk=0;
 277   3              }
 278   2              }
 279   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    790    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
